@page "/Register"
@using CarRental.Models
@using MySqlConnector
@inject IConfiguration Configuration


<h1>Register</h1>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p style="color: red;">@errorMessage</p>
}




<EditForm Model="newUser" OnValidSubmit="RegisterUser" FormName="registrationForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <p>
        <label for="login">Nazwa użytkownika:</label>
        <InputText ValueExpression="() => _Login" ValueChanged="(value) => _Login = value"></InputText>
    </p>
    <p>
        <label for="haslo">Hasło:</label>
        <InputText type="password" ValueExpression="() => _Haslo" ValueChanged="(value) => _Haslo = value"></InputText>
    </p>
    <ValidationMessage For="@(() => newUser.Login)" />

    <button type="submit">Zarejestruj się</button>
</EditForm>

@code {

    private string _Login = String.Empty;
    private string _Haslo = String.Empty;
    private bool _CzyPracownik = false;
    private string errorMessage;
    public KontoUzytkownikaModel newUser = new KontoUzytkownikaModel();
    
    private async Task RegisterUser()
    {

        newUser.Login = _Login;
        newUser.Haslo = _Haslo;
        newUser.CzyPracownik = _CzyPracownik;
        try
        {
            // Odczytanie connection string z pliku konfiguracyjnego
            var connectionString = Configuration.GetConnectionString("MySqlConnection1");

            // Tworzenie połączenia z bazą danych MySQL
            using (var connection = new MySqlConnection(connectionString))
            {
                // Otwieranie połączenia
                await connection.OpenAsync();

                // Tworzenie kwerendy SQL
                var query = $"INSERT INTO KontoUzytkownika (Login, Haslo, CzyPracownik) VALUES ('{newUser.Login}','{newUser.Haslo}',{newUser.CzyPracownik})";
                
                // Tworzenie komendy SQL
                using (var command = new MySqlCommand(query, connection))
                {
                    // Wykonanie kwerendy
                    await command.ExecuteNonQueryAsync();
                }
            }

            // Jeśli rejestracja zakończyła się sukcesem, możesz przekierować użytkownika na inną stronę
            // navigationManager.NavigateTo("/login");
        }
        catch (Exception ex)
        {
            this.errorMessage = $"Wystąpił błąd podczas rejestracji: {ex.Message}";
        }
    }
    
    
}
